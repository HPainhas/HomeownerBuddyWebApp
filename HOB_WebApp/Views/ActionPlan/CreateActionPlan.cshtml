@model HOB_WebApp.Models.ContentModel

@{
    ViewData["Title"] = "CreateActionPlan";
}

<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <link rel="stylesheet" href="~/css/edit.css">
    <link rel="stylesheet" href="~/css/Login.css">
    <link rel="stylesheet" href="~/css/createActionPlan.css" />
</head>

<body class="background">
    <div class="main-container">
        <h1>Create an Issue</h1>
        <div class="row">
            <div class="align">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <div class="form-group">
                            <label asp-for="Title" class="control-label"></label>
                            <input asp-for="Title" class="form-control" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>
                        Select a Category:
                        <select asp-for="Category" id="category" name="category" value="Select A Category">
                            <option value="plumbing">Plumbing</option>
                            <option value="electrical">Electrical</option>
                            <option value="hvac">HVAC</option>
                            <option value="exterior">Exterior</option>
                            <option value="basement">Basement</option>
                            <option value="livingRoom">Living Room</option>
                            <option value="kitchen">Kitchen</option>
                            <option value="bathroom">Bathroom</option>
                            <option value="closet">Closet</option>
                            <option value="laundry">Laundry</option>
                            <option value="hallway">Hallway</option>
                            <option value="bedroom">Bedroom</option>
                            <option value="misc">Misc.</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label asp-for="Link" class="control-label"></label>
                        <input asp-for="Link" class="form-control" />
                        <span asp-validation-for="Link" class="text-danger"></span>
                    </div>
                    <div id="steps" class="form-group">
                        <label asp-for="Steps" class="control-label"></label>
                        <p>
                            <i style="color:red">Enter steps, pressing enter after each one</i>
                        </p>
                        <textarea asp-for="Steps" rows="6" class="form-control" style="resize:none"></textarea>
                        <span asp-validation-for="Steps" class="text-danger"></span>
                    </div>

                    <label asp-for="Tags" class="control-label"></label>
                    <div class="form-group2" id="tagGroup" name="tags">
                        <span asp-validation-for="Tags" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <button id="btnAddTag" type="button" class="add-tag-button">Add Tag</button>
                    </div>
                    <i style="color:red">Title will automatically be added to tags</i>
                    <div class="form-group">
                        <input type="submit" value="Create Action Plan" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script type="text/javascript" src="~/js/actionPlan.js"></script>
</body>

</html>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>

    <script type="text/javascript">
        //variable used to make individual tags
        var tagNumber = 0;

        //buton destroys its div
            function closeAction(button) {
                var element = document.getElementById("group" + button.id);
                element.parentNode.removeChild(element);
            }
        $(document).ready(function () {
            //adds first input
            newInput();
            //Runs when "add tag" button is clicked
            $('#btnAddTag').click(function (e) {
                //iterate tagNumber
                tagNumber++;
                //Adds another tag input to the HTML
                newInput();
            });

            
            function newInput() {
                $('.form-group2').prepend('<div class="inputGroup" id="group' + tagNumber + '"><input class="form-control" type="text" id="Tags' + String(tagNumber) + '" name="Tags" value="' + name + '"><button  id="' + String(tagNumber) + '" onclick="closeAction(this)" class="button delete-tag-button" type="button">Delete</button></div>');
            }

            var input = document.getElementById('tagGroup');
            // Execute a function when the user releases a key on the keyboard
            input.addEventListener("keydown", function (event) {
                // Number 13 is the "Enter" key on the keyboard
                if (event.keyCode === 13) {
                    // Cancel the default action, if needed
                    event.preventDefault();
                    // Trigger the button element with a click
                    document.getElementById("btnAddTag").click();
                    //input = document.getElementById("Tags");

                    document.getElementById("Tags" + tagNumber).focus();
                    document.getElementById("Tags" + tagNumber).select();
                }
            });
        });
    </script>

}